- name: install git
  apt:
    name: git
    state: present

- name: install python3-venv
  apt:
    name: python3-venv
    state: present
  
- name: Clone Django project 
  git:
   repo: "https://github.com/domestos/DjangoStartProject.git"
   dest: "{{ project_dir }}" 
   version: "master"
  #  clone: yes
   force: yes
  become_user: "{{ project_user }}"
  # ignore_errors: yes


- name: Changing permissions of - "{{ project_dir }}/manage.py Make executable.
  file:    
    path: "{{ project_dir }}/manage.py"  
    mode: u=rwx,g=rX,o=rX
    # recurse: yes
  tags: perm



# - name: Ensure files are 0644
#   command: find {{ project_dir }} -type f -exec chmod -c 0754 {} \;
#   register: chmod_result
#   changed_when: "chmod_result.stdout != \"\""
#   tags: perm
  
# - name: Set perms on new Code repo to deployer:deployer dirs-0755 and files-0644
#   file:
#     path: "{{ project_dir }}"
#     state: directory
#     # owner: deployer 
#     # group: deployer 
#     mode: u=rwX,g=rX,o=rX
#     recurse: yes
#   become: yes


# - name: Changing permissions of - "{{ project_dir }}"
#   file:    
#     path: "{{ item }}"  
#     mode: u=rwx,g=rX,o=rX 
#   with_items:    
#     - "{{ project_dir }}"

# # - name: Install product.py
# #   template:
# #     src: production.py
# #     dest: "{{ project_dir }}/config/settings/production.py"
# #   become_user:  "{{ project_user }}"

- name: Create virtualenv and run pip install -r requirement.freeze
  pip:
    virtualenv: "{{ project_dir }}/venv"
    requirements: "{{ project_dir }}/requirements.txt"
    virtualenv_command: "/usr/bin/python3 -m venv"
  become_user:  "{{ project_user }}"
  
- name: Run 
  become_user:  "{{ project_user }}"
  django_manage:
    command: migrate
    app_path: "{{ project_dir }}"
    settings: "config.settings"
    virtualenv: "{{ project_dir }}/venv"
  # become: true
  # environment:
  #   SECRET_KEY: "v^$$!y#fmnp=dyc7n6odvkjbv=5)on_@%o!mzy5l!_(m$rljb3"
  #   DB_NAME: "{{db_name}}"
  #   BD_USER: "{{db_user}}"
  #   BD_PASS: "{{db_pass}}"

# - name: Run collectstatic
#   django_manage:
#     command: collectstatic
#     app_path: "{{ project_dir }}"
#     settings: "config.settings.production"
#     virtualenv: "{{ project_dir }}/venv"
#   remote_user: "{{ project_user }}"
#   environment:
#     SECRET_KEY: "{{}}"
#     DB_NAME: "{{}}"
#     BD_USER: "{{}}"
#     BD_PASS: "{{}}"
